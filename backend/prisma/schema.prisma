// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CLIENT
  COACH
  MANAGER
  OTHER
}

model Credentials {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
}

model Token {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  validUntil DateTime
  token     String   @unique
  email     String
}

model Employee {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String?
  surname   String?
  birthdate String?
  gender    String?
  work      String?
  image     String?
  role      Role     @default(OTHER)
  constumerIds Int[]
}

model Tips {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  tip   String
}

model Events {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  date      String
  max_participants Int
  location_x String
  location_y String
  type      String
  employee_id Int
  location_name String
  duration  Int      @default(120)
}

model Clothes {
  id        Int      @id @default(autoincrement())
  image     String
  type      String @default("clothes")
}

model Enconters {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  customer_id Int
  date      String
  rating    Int
  comment   String
  source    String
}

model Customers {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String
  surname   String
  birthdate String
  gender    String
  description String
  astrological_sign String
  phone_number String
  address    String
  image     String?
  clothes_ids Int[]
}

model Payments {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  customer_id Int
  amount    Float
  date      String
  payment_method String
  comment   String
}
